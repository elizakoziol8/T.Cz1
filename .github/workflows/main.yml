# This is a basic workflow to help you get started with Actions

name: CI
on:
  push:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      #Skonfigurowanie dockera + buildx
      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        
      #Instalacja QEMU
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v1.2.0

      #Konfiguracja cachowania
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      #Logowanie do Dockerhuba
      - name: Login to DockerHub
        uses: docker/login-action@v1.14.1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      
      #Logowanie do rejestru Githuba
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #Zbudowanie i wypchniecie obrazu na Dockerhuba
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64 
          context: .
          file: ./Dockerfile
          push: true

      
      #Przenies cache'a
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
